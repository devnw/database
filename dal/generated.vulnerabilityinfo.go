package dal

//**********************************************************
// GENERATED CODE - DO NOT CHANGE
// This file is generated using scaffolding. Any changes to
// this file will be overwritten on the next build
//**********************************************************

import (
	"encoding/json"
	"github.com/nortonlifelock/domain"
	"time"
)

//**********************************************************
// Struct Declaration
//**********************************************************

// VulnerabilityInfo defines the struct that implements the VulnerabilityInfo interface
type VulnerabilityInfo struct {
	CVEsvar                 []domain.VulnerabilityReference
	CVSS3Scorevar           *float32
	CVSSScorevar            float32
	Createdvar              *time.Time
	Descriptionvar          string
	DetectionInformationvar *string
	IDvar                   string
	NeedsUpdatevar          bool
	Softwarevar             *string
	Solutionvar             string
	SourceIDvar             string
	SourceVulnIDvar         string
	Titlevar                string
	Updatedvar              *time.Time
	Vendorsvar              []domain.VulnerabilityReference
	VulnerabilityIDvar      *string
}

//**********************************************************
// Struct Methods
//**********************************************************

// MarshalJSON marshals the struct by converting it to a map
func (myVulnerabilityInfo VulnerabilityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(map[string]interface{}{
		"CVEs":                 myVulnerabilityInfo.CVEsvar,
		"CVSS3Score":           myVulnerabilityInfo.CVSS3Scorevar,
		"CVSSScore":            myVulnerabilityInfo.CVSSScorevar,
		"Created":              myVulnerabilityInfo.Createdvar,
		"Description":          myVulnerabilityInfo.Descriptionvar,
		"DetectionInformation": myVulnerabilityInfo.DetectionInformationvar,
		"ID":                   myVulnerabilityInfo.IDvar,
		"NeedsUpdate":          myVulnerabilityInfo.NeedsUpdatevar,
		"Software":             myVulnerabilityInfo.Softwarevar,
		"Solution":             myVulnerabilityInfo.Solutionvar,
		"SourceID":             myVulnerabilityInfo.SourceIDvar,
		"SourceVulnID":         myVulnerabilityInfo.SourceVulnIDvar,
		"Title":                myVulnerabilityInfo.Titlevar,
		"Updated":              myVulnerabilityInfo.Updatedvar,
		"Vendors":              myVulnerabilityInfo.Vendorsvar,
		"VulnerabilityID":      myVulnerabilityInfo.VulnerabilityIDvar,
	})
}

// CVEs returns the CVEs parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) CVEs() (param []domain.VulnerabilityReference) {
	return myVulnerabilityInfo.CVEsvar
}

// CVSS3Score returns the CVSS3Score parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) CVSS3Score() (param *float32) {
	return myVulnerabilityInfo.CVSS3Scorevar
}

// CVSSScore returns the CVSSScore parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) CVSSScore() (param float32) {
	return myVulnerabilityInfo.CVSSScorevar
}

// Created returns the Created parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) Created() (param *time.Time) {
	return myVulnerabilityInfo.Createdvar
}

// Description returns the Description parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) Description() (param string) {
	return myVulnerabilityInfo.Descriptionvar
}

// DetectionInformation returns the DetectionInformation parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) DetectionInformation() (param *string) {
	return myVulnerabilityInfo.DetectionInformationvar
}

// ID returns the ID parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) ID() (param string) {
	return myVulnerabilityInfo.IDvar
}

// NeedsUpdate returns the NeedsUpdate parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) NeedsUpdate() (param bool) {
	return myVulnerabilityInfo.NeedsUpdatevar
}

// Software returns the Software parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) Software() (param *string) {
	return myVulnerabilityInfo.Softwarevar
}

// Solution returns the Solution parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) Solution() (param string) {
	return myVulnerabilityInfo.Solutionvar
}

// SourceID returns the SourceID parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) SourceID() (param string) {
	return myVulnerabilityInfo.SourceIDvar
}

// SourceVulnID returns the SourceVulnID parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) SourceVulnID() (param string) {
	return myVulnerabilityInfo.SourceVulnIDvar
}

// Title returns the Title parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) Title() (param string) {
	return myVulnerabilityInfo.Titlevar
}

// Updated returns the Updated parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) Updated() (param *time.Time) {
	return myVulnerabilityInfo.Updatedvar
}

// Vendors returns the Vendors parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) Vendors() (param []domain.VulnerabilityReference) {
	return myVulnerabilityInfo.Vendorsvar
}

// VulnerabilityID returns the VulnerabilityID parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) VulnerabilityID() (param *string) {
	return myVulnerabilityInfo.VulnerabilityIDvar
}

// SetID sets the ID parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) SetID(val string) {
	myVulnerabilityInfo.IDvar = val
}

// SetSourceID sets the SourceID parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) SetSourceID(val string) {
	myVulnerabilityInfo.SourceIDvar = val
}

// SetSourceVulnID sets the SourceVulnID parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) SetSourceVulnID(val string) {
	myVulnerabilityInfo.SourceVulnIDvar = val
}

// SetVulnerabilityID sets the VulnerabilityID parameter from the VulnerabilityInfo struct
func (myVulnerabilityInfo *VulnerabilityInfo) SetVulnerabilityID(val string) {
	myVulnerabilityInfo.VulnerabilityIDvar = &val
}
